/*
* Ensures that all Connectors and Stages must use encrypted Passwords
*
* Rationale:
* Unencrypted passwords are a security risk and should be avoided.
* 
* This one is a bit complicated, because there are a couple of factors to consider:
* Some Stages have their passwords as clear text
* Some are encrypted and the value is always stored as encrypted, so we can't tell whether they are hardcoded or using parameters.
* Connector password fields are encrypted, but store parameter names as clear text. The parameter itself may or may not be encrypted.
*
* The one caveat on this rule is that the ISX stores parametersets separately to jobs, so if a Password field refers to a parameter inside a parameterset,
* that parameter may be unencrypted and we won't know.
* That said, the password won't be stored in the ISX for the job. 
*/


// stage to property mapping
def stageProperties = [
    'DB2ConnectorPX'                  : [[alias: 'Password', name: 'XMLProperties:Connection.Password'], 
                                         [alias: 'Alternate Conductor Password', name: 'XMLProperties:Connection.Conductor.Password'] ],
    'PxDB2'                           : [[alias: 'Password', name: 'password'] ],
    'DSDB2PX'                         : [[alias: 'Password', name: 'PASSWORD'] ],
    'UDBLoadPX'                       : [[alias: 'Password', name: 'PASSWORD'] ],
    'PxDB2Z'                          : [[alias: 'Database Password', name: 'dbpassword'],
                                         [alias: 'Transfer User Password', name: 'xfer_password'] ],
    'PxClassicFederation'             : [[alias: 'Password', name: 'password'] ], 
    'DRSConnectorPX'                  : [[alias: 'Password', name: 'XMLProperties:Connection.PASSWORD'] ],
    'DRSPX'                           : [[alias: 'Password', name: 'PASSWORD'] ],
    'GreenplumConnectorPX'            : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'HiveConnectorPX'                 : [[alias: 'Password', name: 'XMLProperties:Connection.Password' ] ],
    'HiveMetastorePX'                 : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'PxInformixXPS'                   : [[alias: 'Password', name: 'password'] ],
    'InfmxCLIPX'                      : [[alias: 'Password', name: 'PASSWORD'] ],
    'XPSLoadPX'                       : [[alias: 'Password', name: 'PASSWORD'] ],
    'Pxiway'                          : [[alias: 'Password', name: 'password'],
                                         [alias: 'Data Password', name: 'data_password'] ],
    'JDBCConnectorPX'                 : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'NetezzaConnectorPX'              : [[alias: 'Password', name: 'XMLProperties:Connection.Password'], 
                                        [alias: 'PasswordTWT', name: 'XMLProperties:Connection.UseSeparateConnectionForTWT.Password'] ],
    'PXNetezza'                       : [[alias: 'Password', name: 'password'],
                                         [alias: 'TWT Password', name: 'password_twt'] ],
    'ODBCConnectorPX'                 : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'PxOdbc'                          : [[alias: 'Password', name: 'password'] ],
    'OracleConnectorPX'               : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'PxOracle'                        : [[alias: 'Password', name: 'password'] ],
    'ORAOCIBLPX'                      : [[alias: 'Password', name: 'PASSWORD'] ],
    'rdbloadPX'                       : [[alias: 'Password', name: 'Password'] ],
    'STPPX'                           : [[alias: 'Password', name: 'PASSWORD'] ],
    'PxSybase'                        : [[alias: 'Password', name: 'password'] ], 
    'IQBulk12PX'                      : [[alias: 'IQ Password', name: 'PASSWORD'] ],
    'SYBASEOCPX'                      : [[alias: 'Password', name: 'PASSWORD'], ],
    'TeradataPX'                      : [[alias: 'Password', name: 'PASSWORD'] ], 
    'PxTeradata'                      : [[alias: 'Password', name: 'password'],
                                         [alias: 'TeraSync Password', name: 'terasync_password'] ], 
    'TeradataConnectorPX'             : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'TDMLoadPX'                       : [[alias: 'Password', name: 'PASSWORD'] ],
    'TerabulkPX'                      : [[alias: 'Password', name: 'PASSWORD'] ],
    'CognosTM1ConnectorPX'            : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'DMConnectorPX'                   : [[alias: 'DB2Password', name: 'XMLProperties:Connection.DB2.Password'],
                                         [alias: 'ODBCPassword', name: 'XMLProperties:Connection.ODBC.Password'],
                                         [alias: 'OraPassword', name: 'XMLProperties:Connection.Oracle.Password'] ],
    'EssbaseConnectorPX'              : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'FileConnectorPX'                 : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'ftpPX'                           : [[alias: 'User Password', name: 'PASSWORD'] ],
    'HFDSFileConnectorPX'             : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'HFDSConnectorPX'                 : [[alias: 'Password', name: 'XMLProperties:Connection.Password'],
                                         [alias: 'Keystore Password', name: 'XMLProperties:Connection.SSLEncryption.ClientAuthentication.KeystorePassword'],
                                         [alias: 'Truststore Password', name: 'XMLProperties:Connection.SSLEncryption.TruststorePassword'] ],
    'AmazonS3PX'                      : [[alias: 'Password', name: 'XMLProperties:Connection.SecretKey'] ],
    'CDCTStagePX'                     : [[alias: 'Password', name: 'XMLProperties:Connection.ODBCPassword'] ],
    'JAQLConnectorPX'                 : [[alias: 'Password', name: 'XMLProperties:Connection.Reserved'] ],
    'JavaStagePX'                     : [[alias: 'Password', name: 'XMLProperties:Connection.Reserved'] ],
    'KafkaConnectorPX'                : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'MasterDataManagementConnectorPX' : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'ftpPX'                           : [[alias: 'User Password', name: 'PASSWORD'] ],
    'ORAAppsPX'                       : [[alias: 'Password', name: 'PASSWORD'],
                                         [alias: 'Password', name: 'LKPASSWORD'] ],
    'orahrchy_PX'                     : [[alias: 'Oracle DSN Password', name: 'PASSWORD'] ],
    'PeoplesoftOnePX'                 : [[alias: 'System DSN Password', name: 'PASSWORD'],
                                         [alias: 'Password', name: 'LKPASSWORD'] ],
    'PS_HRYPX'                        : [[alias: 'ODBC DSN Password', name: 'PASSWORD'] ],
    'ftpPX'                           : [[alias: 'Password', name: 'password'] ],
    'PxSCD'                           : [[alias: 'Password', name: 'password'] ],
    'PxSurrogateKeyGeneratorN'        : [[alias: 'Password', name: 'password'] ],
    'PxzOSFile'                       : [[alias: 'Password', name: 'fppassword'] ],
    'SALESFORCEJCConnectorPX'         : [[alias: 'Password', name: 'XMLProperties:Connection.Password'], 
                                         [alias: 'Proxy Server Password', name: 'XMLProperties:Connection.ProxyServerPassWord'] ],
    'Siebel_BCPX'                     : [[alias: 'Siebel DSN Password', name: 'PASSWORD'],
                                         [alias: 'Password', name: 'LKPASSWORD'] ],
    'Siebel_DAPX'                     : [[alias: 'Siebel DSN Password', name: 'PASSWORD'],
                                         [alias: 'Password', name: 'LKPASSWORD'] ],
    'Siebel_EIMPX'                    : [[alias: 'ODBC Password', name: 'ODBCPassWord'],
                                         [alias: 'ODBC Password for metadata access', name: 'ODBCClientPassWord'],
                                         [alias: 'Siebel Password', name: 'PassWord'] ],
    'StreamsConnectorPX'              : [[alias: 'Password', name: 'XMLProperties:Connection.Password'], 
                                         [alias: 'P12 Password', name: 'XMLProperties:Connection.ClientAuthentication.P12Password'] ],
    'UnstructuredDataConnectorPX'     : [[alias: 'Password', name: 'XMLProperties:Connection.Reserved'] ],
    'WebSphereMQConnectorPX'          : [[alias: 'Password', name: 'XMLProperties:Connection.Password'] ],
    'WSClientPX'                      : [[alias: 'Basic authentication password', name: 'authentication_password'],
                                         [alias: 'Proxy password', name: 'proxy_password'] ],
    'WSTransformerPX'                 : [[alias: 'Basic authentication password', name: 'authentication_password'],
                                         [alias: 'Proxy password', name: 'proxy_password'] ],
]

// Take a list of the encrypted parameters included in the Job
// If a password field refers to a parameter, it needs to be in this list
encryptedParameters = []
item.parameters.each { paramName, param ->
    if (param.type == "EncryptedString") {
        encryptedParameters.add("#" + param.name + "#")
    }
}

item.graph.V.stage.sideEffect{ stage ->

    // the properties for this stage type
    def properties = stageProperties[stage.stageType]
	    
	if (properties) {        
        // find path[s] associated with this property
        
        properties.each { property ->
            def paths = []

            if (property.name.contains("XMLProperties:")) {
                def xmlProp = property.name.drop("XMLProperties:".length())
                path = Eval.x(stage["XMLProperties"], "x.${xmlProp}")

                if (path != null) {
                    paths.add(path)
                }
            } else {
                // get the paths from the stage
                if (stage[property.name] != null) {
                    paths.add(stage[property.name])
                }

                // get paths from input/output pins
                stage.in.pin.property(property.name).fill(paths)
                stage.out.pin.property(property.name).fill(paths)
            }
            // flatten any sub arrays
            paths = paths.flatten()

            // Encrypted. It's either hardcoded and encrypted or an encrypted reference to a parameter[set], depending on the stage. Irrelevant either way 
            if (property.alias.matches('(?i).*password.*')) {
                paths.removeAll { it.toString().matches('^([{]iisenc[}]|HD[:]).*') }
            }

            // turn path properties into strings considering any property hierarchy queries
            paths.removeAll { it == null || it.toString().isEmpty() } //empty fields
            paths.removeAll { it.toString().matches('^#[a-zA-Z0-9][A-Za-z0-9|_]*?[.]([$])?[a-zA-Z0-9][A-Za-z0-9|_]*#$') } // drop references to parametersets, which we can't verify

            paths.removeAll { it.toString().matches('^#([$])?[a-zA-Z0-9][A-Za-z0-9|_]*#$') && encryptedParameters.contains(it.toString()) } // drop references to parameters in the list of encrypted

            if (paths.size() > 0) {
                compliance.failure("${config.readableStageTypes[stage.stageType] ?: stage.stageType} '${stage.stageName}' contains unencrypted ${property.alias} value '${paths}'.")
            }
        }
    }
}