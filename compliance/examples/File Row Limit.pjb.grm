/*
 * Identifies row limits in file stages (Sequential File, Complex Flat File)
 *
 * Rationale:
 * Row limits set on the file stages are options developers might use during development
 * and unit testing to allow faster development . Leaving these options set may have unintended 
 * consequences should the job be deployed into test and production environments. 
 */

 // stage to file property mapping
def stageProperties = [
    'PxSequentialFile'              : 'first'   ,
    'PxCFF'                         : 'first'   
]


 def fileStage = { stage ->

     // the properties for this stage type
    def propertyName = stageProperties[stage.stageType]

    // check if the stage is in the list of stage properties
    if (!propertyName) {
        return false
    }

    // check if the stage has an output link
    if(!stage.out.pin) {
        return false
    }

    // check if the stage is a sequential file
    if( 'PxSequentialFile'.equalsIgnoreCase(stage.stageType) ) {
        // drill down to the pin to retrieve the limit properties

        if( stage.out.pin.property(propertyName).next() ) {
            return true
        }
    } else {
        // file is a complex flat file

        if ( stage.property(propertyName).next() ) {
            return true
        }
    }

    return false
}

item.graph.V.stage.filter(fileStage).comply{"Stage ${it.stageName} has row limit set to ${it.value}"}
{ 
    // build a more detailed compliance error message

    // the properties for this stage type
    def propertyName = stageProperties[it.stageType]
    
    if ('PxSequentialFile'.equalsIgnoreCase(it.stageType)) {
        it.value = it.out.pin.property(propertyName).next()
    } else {
        it.value = it.property(propertyName).next()
    }
    
    return false
};

